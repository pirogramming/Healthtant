# Generated by Django 5.2.4 on 2025-08-14 14:07

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Food',
            fields=[
                ('food_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('food_img', models.CharField(blank=True, max_length=255, null=True)),
                ('food_name', models.CharField(max_length=255)),
                ('food_category', models.CharField(max_length=255)),
                ('representative_food', models.CharField(max_length=255)),
                ('nutritional_value_standard_amount', models.BigIntegerField()),
                ('calorie', models.BigIntegerField()),
                ('moisture', models.FloatField()),
                ('protein', models.FloatField()),
                ('fat', models.FloatField()),
                ('carbohydrate', models.FloatField()),
                ('sugar', models.FloatField(blank=True, null=True)),
                ('dietary_fiber', models.FloatField(blank=True, null=True)),
                ('calcium', models.FloatField(blank=True, null=True)),
                ('iron_content', models.FloatField(blank=True, null=True)),
                ('phosphorus', models.FloatField(blank=True, null=True)),
                ('potassium', models.FloatField(blank=True, null=True)),
                ('salt', models.BigIntegerField(blank=True, null=True)),
                ('VitaminA', models.FloatField(blank=True, null=True)),
                ('VitaminB', models.FloatField(blank=True, null=True)),
                ('VitaminC', models.FloatField(blank=True, null=True)),
                ('VitaminD', models.FloatField(blank=True, null=True)),
                ('VitaminE', models.FloatField(blank=True, null=True)),
                ('cholesterol', models.FloatField(blank=True, null=True)),
                ('saturated_fatty_acids', models.FloatField(blank=True, null=True)),
                ('trans_fatty_acids', models.FloatField(blank=True, null=True)),
                ('magnesium', models.FloatField(blank=True, null=True)),
                ('serving_size', models.FloatField(blank=True, null=True)),
                ('weight', models.FloatField()),
                ('company_name', models.CharField(max_length=255)),
                ('nutrition_score', models.FloatField(blank=True, help_text='0-10 영양 점수', null=True)),
                ('nutri_score_grade', models.CharField(blank=True, help_text='A-E 등급', max_length=1, null=True)),
                ('nrf_index', models.FloatField(blank=True, help_text='NRF 지수', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '식품',
                'verbose_name_plural': '식품들',
                'db_table': 'food',
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('price_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('shop_name', models.CharField(max_length=100)),
                ('price', models.BigIntegerField()),
                ('discount_price', models.BigIntegerField(blank=True, null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='foods.food')),
            ],
            options={
                'verbose_name': '가격 정보',
                'verbose_name_plural': '가격 정보들',
                'db_table': 'price',
            },
        ),
        migrations.CreateModel(
            name='FavoriteFood',
            fields=[
                ('favorite_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, related_name='favorite_foods', to=settings.AUTH_USER_MODEL)),
                ('food', models.ForeignKey(db_column='food_id', on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='foods.food')),
            ],
            options={
                'db_table': 'Favorite_Food',
                'indexes': [models.Index(fields=['user', 'food'], name='Favorite_Fo_user_id_f9ffe5_idx')],
                'unique_together': {('user', 'food')},
            },
        ),
    ]
