name: Deploy (Build in CI, Pull on Server)

on:
  push:
    branches: ["main"]

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Build & Push image (tag: sha + latest)"
        uses: docker/build-push-action@v5
        env:
          IMAGE: ghcr.io/pirogramming/healthtant
          TAG: ${{ github.sha }}
        with:
          context: .
          push: true
          tags: |
            ghcr.io/pirogramming/healthtant:${{ github.sha }}
            ghcr.io/pirogramming/healthtant:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail
            cd ~/Healthtant

            # 로그인 및 이미지 풀 병렬 처리
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ secrets.USERNAME }} --password-stdin
            
            # 이미지 풀 후 즉시 재시작 (다운타임 최소화)
            docker-compose pull
            docker-compose up -d --remove-orphans

            # 마이그레이션과 정적파일 수집을 백그라운드에서 실행
            docker-compose exec -T web python manage.py migrate --noinput &
            docker-compose exec -T web python manage.py collectstatic --noinput &
            wait